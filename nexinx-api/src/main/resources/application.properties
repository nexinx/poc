#################################################################################
# Authentication Process
#################################################################################

# Enable JWT authentication
mp.jwt.verify.publickey.location=META-INF/resources/publicKey.pem
smallrye.jwt.sign.key.location=META-INF/resources/privateKey.pem
mp.jwt.verify.issuer=${JWT_ISSUER:http://localhost:8080}
jwt.token.expire=${JWT_TOKEN_EXPIRE:3600}  
#3600=1h

# Define which paths are publicly accessible and which is not accessible
quarkus.http.auth.permission.public.paths=/api/v1/auth/login,/api/v1/auth/register
quarkus.http.auth.permission.public.policy=permit
quarkus.http.auth.permission.authenticated.paths=/api/v1/*
quarkus.http.auth.permission.authenticated.policy=authenticated

# Session configuration
#quarkus.http.auth.session.encryption-key=jlGwNmivuYWSLwD93wtZLMAxRtw74MtI
#quarkus.http.auth.session.enabled=true
#quarkus.http.auth.form.enabled=true
#quarkus.http.auth.form.login-page=/login.html
#quarkus.http.auth.form.post-location=/api/v1/auth/login
#quarkus.http.auth.form.error-page=/error.html

#################################################################################
# CORS CONFIGURATION
#################################################################################
quarkus.http.cors=true
quarkus.http.cors.origins=${CORS_ORIGINS:http://localhost:3000} 
quarkus.http.cors.headers=Content-Type,Authorization
quarkus.http.cors.methods=GET,POST,PUT,DELETE
#################################################################################
# LOG CONFIGURATION
#################################################################################
quarkus.log.console.format=%z{${LOG_TIME_ZONE:Europe/Berlin}} %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n
#################################################################################
# DATABASE CONFIGURATION
#################################################################################
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DB_USER:nexinx_user}
quarkus.datasource.password=${DB_PASSWORD:nexinx_pass}
quarkus.datasource.reactive.url=postgresql://${DB_SERVER:localhost}:${DB_PORT:5432}/${DB_NAME:nexinx_db_001}
#quarkus.hibernate-orm.log.sql=true

#################################################################################
# RabbitMQ CONFIG
#################################################################################
rabbitmq-host=${MQTT_HOST:localhost}
rabbitmq-port=${MQTT_PORT:5672}
rabbitmq-username=${MQTT_USER:mq_user}
rabbitmq-password=${MQTT_PASSWORD:mq_password}

# Inbound
mp.messaging.incoming.esl-message-in.connector=smallrye-rabbitmq
mp.messaging.incoming.esl-message-in.queue.name=${ESL_MESSAGE_IN:esl-message-in}
mp.messaging.incoming.esl-message-in.autoAcknowledgement=true
# Outbound
mp.messaging.outgoing.esl-message-out.connector=smallrye-rabbitmq
mp.messaging.outgoing.esl-message-out.exchange.name=${ESL_MESSAGE_OUT:esl-message-out}


#################################################################################
# MQTT
#################################################################################

# Configure the MQTT sink (we write to it)
#mp.messaging.outgoing.topic-price.connector=smallrye-mqtt
#mp.messaging.outgoing.topic-price.topic=prices
#mp.messaging.outgoing.topic-price.host=${MQTT_HOST:localhost}
#mp.messaging.outgoing.topic-price.port=1883
#mp.messaging.outgoing.topic-price.auto-generated-client-id=true
#
## Configure the MQTT source (we read from it)
#mp.messaging.incoming.prices.connector=smallrye-mqtt
#mp.messaging.incoming.prices.topic=prices
#mp.messaging.incoming.prices.host=${MQTT_HOST:localhost}
#mp.messaging.incoming.prices.port=1883
#mp.messaging.incoming.prices.auto-generated-client-id=true